/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>
#include "main.h"
extern "C" {
	extern uint16_t score;
	extern uint16_t topScore;
	extern uint8_t timeCounter;
	extern uint32_t flashAddress;
	extern uint8_t screenNumber;
	extern TIM_HandleTypeDef htim2;
}
uint8_t isScoreShowed = 0;
uint8_t isTopScoreChanged = 0;
uint8_t isTopScoreShowed = 0;

Screen2ViewBase::Screen2ViewBase()
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    backgroundGameOver.setPosition(0, 0, 240, 320);
    backgroundGameOver.setColor(touchgfx::Color::getColorFromRGB(82, 190, 209));
    add(backgroundGameOver);

    endScoreText.setXY(77, 168);
    endScoreText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    endScoreText.setLinespacing(0);
    Unicode::snprintf(endScoreTextBuffer, ENDSCORETEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5NP2).getText());
    endScoreText.setWildcard(endScoreTextBuffer);
    endScoreText.resizeToCurrentText();
    endScoreText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IPTN));
    add(endScoreText);

    topScoreText.setXY(57, 207);
    topScoreText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    topScoreText.setLinespacing(0);
    Unicode::snprintf(topScoreTextBuffer, TOPSCORETEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E3RK).getText());
    topScoreText.setWildcard(topScoreTextBuffer);
    topScoreText.resizeToCurrentText();
    topScoreText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YE2B));
    add(topScoreText);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_FLAPPYGAMEOVER_ID));
    scalableImage1.setPosition(35, 80, 170, 80);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage1);

    flashAddress = 0x08100000;
    topScore = *(__IO uint16_t *)flashAddress;
	if (topScore == 65535 || topScore > 1000){
		topScore = 0;
	}
	isScoreShowed = 0;
	isTopScoreChanged = 0;
	isTopScoreShowed = 0;
}

Screen2ViewBase::~Screen2ViewBase()
{

}

void Screen2ViewBase::setupScreen()
{

}

void Screen2ViewBase::handleTickEvent()
{
	if(timeCounter >= 5){
		screenNumber = 1;
		score = 0;
		HAL_TIM_Base_Stop_IT(&htim2);
		timeCounter = 0;
		application().gotoFlappyScreenScreenNoTransition();
	}
    //Interaction1
    //When every N tick set wildcard endScoreText
    //Set endScoreText wildcard to __SingleUse_JXFO
	if (!isScoreShowed){
		Unicode::snprintf(endScoreTextBuffer, 10, "%u" , score);
		endScoreText.resizeToCurrentText();
		endScoreText.invalidate();
		isScoreShowed = 1;
	}

	if(score > topScore && !isTopScoreChanged){

		flashAddress = 0x08100000;
		static FLASH_EraseInitTypeDef erase;
		uint32_t sector;
		FLASH->SR = FLASH_FLAG_PGPERR;
		FLASH->SR = FLASH_FLAG_PGSERR;
		FLASH->SR = FLASH_FLAG_EOP;
		FLASH->SR = FLASH_FLAG_OPERR;
		FLASH->SR = FLASH_FLAG_WRPERR;
		FLASH->SR = FLASH_FLAG_PGAERR;
		HAL_FLASH_Unlock();
		erase.TypeErase=FLASH_TYPEERASE_SECTORS;
		erase.VoltageRange=FLASH_VOLTAGE_RANGE_2;
		erase.Sector=(uint32_t)12;
		erase.NbSectors=(uint32_t)1;
		HAL_FLASHEx_Erase(&erase,&sector);
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_HALFWORD, flashAddress, score);
		topScore = *(__IO uint16_t *)flashAddress;
		isTopScoreChanged = 1;
		HAL_FLASH_Lock();
	}

	if(!isTopScoreShowed){
		Unicode::snprintf(topScoreTextBuffer, 10, "%u" , topScore);
		topScoreText.resizeToCurrentText();
		topScoreText.invalidate();
		isTopScoreShowed = 1;
	}
}

